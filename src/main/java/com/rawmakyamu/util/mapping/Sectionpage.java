package com.rawmakyamu.util.mapping;
// Generated Jan 28, 2016 9:45:39 AM by Hibernate Tools 3.6.0


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sectionpage generated by hbm2java
 */
@Entity
@Table(name="SECTIONPAGE"
    
    
)
public class Sectionpage  implements java.io.Serializable {


     private SectionpageId id;
     private Section section;
     private Page page;
     private Userrole userrole;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createtime;

    public Sectionpage() {
    }

	
    public Sectionpage(SectionpageId id, Section section, Page page, Userrole userrole) {
        this.id = id;
        this.section = section;
        this.page = page;
        this.userrole = userrole;
    }
    public Sectionpage(SectionpageId id, Section section, Page page, Userrole userrole, String lastupdateduser, Date lastupdatedtime, Date createtime) {
       this.id = id;
       this.section = section;
       this.page = page;
       this.userrole = userrole;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createtime = createtime;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="userrolecode", column=@Column(name="USERROLECODE", nullable=false, length=20) ), 
        @AttributeOverride(name="sectioncode", column=@Column(name="SECTIONCODE", nullable=false, length=20) ), 
        @AttributeOverride(name="pagecode", column=@Column(name="PAGECODE", nullable=false, length=20) ) } )
    public SectionpageId getId() {
        return this.id;
    }
    
    public void setId(SectionpageId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SECTIONCODE", nullable=false, insertable=false, updatable=false)
    public Section getSection() {
        return this.section;
    }
    
    public void setSection(Section section) {
        this.section = section;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGECODE", nullable=false, insertable=false, updatable=false)
    public Page getPage() {
        return this.page;
    }
    
    public void setPage(Page page) {
        this.page = page;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USERROLECODE", nullable=false, insertable=false, updatable=false)
    public Userrole getUserrole() {
        return this.userrole;
    }
    
    public void setUserrole(Userrole userrole) {
        this.userrole = userrole;
    }

    
    @Column(name="LASTUPDATEDUSER", length=20)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=23)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATETIME", length=23)
    public Date getCreatetime() {
        return this.createtime;
    }
    
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }




}


