package com.rawmakyamu.util.mapping;
// Generated Jan 28, 2016 9:45:39 AM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Userrole generated by hbm2java
 */
@Entity
@Table(name="USERROLE"
    
)
public class Userrole  implements java.io.Serializable {


     private String userrolecode;
     private Status status;
     private String description;
     private Userlevel userlevel;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createtime;
     private Set<Systemuser> systemusers = new HashSet<Systemuser>(0);
     private Set<Pagetask> pagetasks = new HashSet<Pagetask>(0);
     private Set<Userrolesection> userrolesections = new HashSet<Userrolesection>(0);
     private Set<Sectionpage> sectionpages = new HashSet<Sectionpage>(0);

    public Userrole() {
    }

	
    public Userrole(String userrolecode) {
        this.userrolecode = userrolecode;
    }
    public Userrole(Date createtime,Date lastupdatedtime,String lastupdateduser,String userrolecode, Status status, Userlevel userlevel, String description, Set<Systemuser> systemusers, Set<Pagetask> pagetasks, Set<Userrolesection> userrolesections, Set<Sectionpage> sectionpages) {
       this.userrolecode = userrolecode;
       this.status = status;
       this.description = description;
       this.systemusers = systemusers;
       this.pagetasks = pagetasks;
       this.userrolesections = userrolesections;
       this.sectionpages = sectionpages;
       this.userlevel =userlevel;
       this.lastupdateduser =lastupdateduser;
       this.lastupdatedtime =lastupdatedtime;
       this.createtime =createtime;
       
       
       
    }
   
     @Id 

    
    @Column(name="USERROLECODE", unique=true, nullable=false, length=20)
    public String getUserrolecode() {
        return this.userrolecode;
    }
    
    public void setUserrolecode(String userrolecode) {
        this.userrolecode = userrolecode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUSCODE")
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="DESCRIPTION", length=50)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Systemuser> getSystemusers() {
        return this.systemusers;
    }
    
    public void setSystemusers(Set<Systemuser> systemusers) {
        this.systemusers = systemusers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Pagetask> getPagetasks() {
        return this.pagetasks;
    }
    
    public void setPagetasks(Set<Pagetask> pagetasks) {
        this.pagetasks = pagetasks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Userrolesection> getUserrolesections() {
        return this.userrolesections;
    }
    
    public void setUserrolesections(Set<Userrolesection> userrolesections) {
        this.userrolesections = userrolesections;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Sectionpage> getSectionpages() {
        return this.sectionpages;
    }
    
    public void setSectionpages(Set<Sectionpage> sectionpages) {
        this.sectionpages = sectionpages;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USERLEVEL")
    public Userlevel getUserlevel() {
        return userlevel;
    }

    public void setUserlevel(Userlevel userlevel) {
        this.userlevel = userlevel;
    }

    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return lastupdateduser;
    }

    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=23)
    public Date getLastupdatedtime() {
        return lastupdatedtime;
    }

    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", length=23)
    public Date getCreatetime() {
        return createtime;
    }

    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }
    


}


